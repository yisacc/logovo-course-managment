# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PermissionEntity {
  code: String!
  name: String!
  description: String!
  isActive: Boolean!
}

type RoleEntity {
  name: String!
  permissions: [PermissionEntity!]!
  isActive: Boolean!
  isAdmin: Boolean!
}

type UserEntity {
  firstName: String!
  lastName: String!
  mobileNumber: String!
  email: String!
  role: RoleEntity!
  country: Float!
  city: Float!
  birthDate: DateTime!
  image: String!
  password: String!
  about: String!
  salt: String!
  isActive: Boolean!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LessonEntity {
  _id: String!
  name: String!
  videoLink: String!
  description: String!
}

type CourseCategoryEntity {
  _id: String!
  name: String!
  orderKey: Float!
  lessons: [LessonEntity!]!
}

type CourseEntity {
  _id: String!
  name: String!
  videoLink: String!
  description: String!
  courseCategories: [CourseCategoryEntity!]!
}

type CityEntity {
  name: String!
  ascii_name: String!
  country_code: String!
  alternate_names: [String!]!
  city_id: String!
  country: CountryEntity!
}

type CountryEntity {
  iso: String!
  country: String!
  capital: String!
  currency_code: String!
  currency_name: String!
  currency_symbol: String!
  phone: String!
  postal_code_format: String!
  postal_code_regex: String!
  languages: [String!]!
  country_id: String!
  cities: [CityEntity!]!
}

type Query {
  courses: [CourseEntity!]!
  course(id: String!): CourseEntity!
  courseCategories: [CourseCategoryEntity!]!
  courseCategory(id: String!): LessonEntity!
  categoriesByCourseId(courseId: String!): [CourseCategoryEntity!]!
  lessons: [LessonEntity!]!
  users: [UserEntity!]!
  user(id: String!): UserEntity!
  inactiveuser(id: String!): UserEntity!
  activateuser(id: String!): UserEntity!
  roles: [RoleEntity!]!
  role(id: String!): RoleEntity!
  permissions: [PermissionEntity!]!
  permission(id: String!): PermissionEntity!
  countries: [CountryEntity!]!
  cities: [CityEntity!]!
  citiesByCountryId(countryId: Float!): [CityEntity!]!
}

type Mutation {
  createCourse(createCourseInput: CreateCourseInput!): CourseEntity!
  createCourseCategory(createCourseCategoryInput: CreateCourseCategoryInput!): CourseCategoryEntity!
  updateOrder(updateCourseCategoryOrder: UpdateCourseCategoryOrder!): Boolean!
  createLesson(createLessonInput: CreateLessonInput!): LessonEntity!
  create(createRoleInput: CreateRoleInput!): RoleEntity!
  deleteuser(id: String!): Boolean!
  updateuser(updateUserInput: UpdateUserInput!): UserEntity!
  updaterole(id: ID!, createRoleInput: UpdateRoleInput!): RoleEntity!
  inactivaterole(id: String!): RoleEntity!
  activaterole(id: String!): RoleEntity!
  inactivepermission(id: String!): PermissionEntity!
  activepermission(id: String!): PermissionEntity!
}

input CreateCourseInput {
  name: String!
  videoLink: String!
  description: String!
}

input CreateCourseCategoryInput {
  name: String!
  course: String!
}

input UpdateCourseCategoryOrder {
  newOrder: String!
}

input CreateLessonInput {
  name: String!
  videoLink: String!
  description: String!
  courseCategory: String!
}

input CreateRoleInput {
  name: String!
  permissions: String!
  isAdmin: Boolean!
}

input UpdateUserInput {
  id: String!
  firstName: String!
  lastName: String!
}

input UpdateRoleInput {
  name: String!
  permissions: String!
  isAdmin: Boolean!
}